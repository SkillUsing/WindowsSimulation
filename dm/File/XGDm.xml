<?xml version="1.0"?>
<doc>
    <assembly>
        "XGDm"
    </assembly>
    <members>
        <member name="M:XGLib.XGDm.VirtualProtectEx(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
修改指定的窗口所在进程的地址的读写属性,修改为可读可写可执行
</summary>
            <param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param>
            <param name="addr">需要修改的地址</param>
            <param name="size">需要修改的地址大小</param>
            <param name="type">修改的地址读写属性类型，取值如下:0 : 可读可写可执行,此时old_protect参数无效 1 : 修改为old_protect指定的读写属性</param>
            <param name="old_protect">指定的读写属性</param>
            <returns>0 : 失败  1 : 修改之前的读写属性</returns>
        </member>
        <member name="M:XGLib.XGDm.FaqCaptureString(System.String)">
            <summary>
从给定的字符串(也可以算是文字类型的问题),获取此句柄. （此接口必须配合答题器v30以后的版本）
</summary>
            <param name="str">文字类型的问题. 比如(桃园三结义指的是哪些人?)</param>
            <returns>文字句柄</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitMultiColord(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
等待多点颜色消失(FindMultiColor),在给定的超时时间段内监控多点颜色
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="first_color">颜色格式为"RRGGBB-DRDGDB|RRGGBB-DRDGDB|…………",比如"123456-000000" 所有的偏移色坐标都相对于此颜色.注意，这里只支持RGB颜色</param>
            <param name="offset_color">偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同, 只不过我的可以支持偏色和多种颜色组合</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,毫秒单位,如果超时设置-1无限等待</param>
            <returns>1.多点颜色消失 0.等待超时</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitMultiColor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
等待多点颜色出现(FindMultiColor),在给定的超时时间段内监控多点颜色
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="first_color">颜色格式为"RRGGBB-DRDGDB|RRGGBB-DRDGDB|…………",比如"123456-000000" 所有的偏移色坐标都相对于此颜色.注意，这里只支持RGB颜色</param>
            <param name="offset_color">偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同, 只不过我的可以支持偏色和多种颜色组合</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,毫秒单位,如果超时设置-1无限等待</param>
            <param name="intX">返回X坐标(坐标为first_color所在坐标)</param>
            <param name="intY">返回Y坐标(坐标为first_color所在坐标)</param>
            <returns>0:没找到 1:找到</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitColord(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
等待颜色消失(FindColor),在给定的超时时间段内监控颜色
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上 4：从中心往外查找 5: 从上到下,从左到右 6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,毫秒单位,如果超时设置-1无限等待</param>
            <returns>1.颜色消失 0.等待超时</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitColor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
等待颜色出现(FindColor),在给定的超时时间段内监控颜色
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上 4：从中心往外查找 5: 从上到下,从左到右 6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,毫秒单位,如果超时设置-1无限等待</param>
            <param name="intX">返回X坐标</param>
            <param name="intY">返回Y坐标</param>
            <returns>0:没找到 1:找到</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitStrFastd(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32)">
            <summary>
等待文字消失(FindStrFast),在给定的超时时间段内监控文字
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param>
            <param name="color_format">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,单位为毫秒,如果超时设置-1无限等待</param>
            <returns>1.文字消失 0.等待超时</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitStrFast(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
等待文字出现(FindStrFast),在给定的超时时间段内监控文字
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param>
            <param name="color_format">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,单位为毫秒,如果超时设置-1无限等待</param>
            <param name="intX">返回X坐标没找到返回-1</param>
            <param name="intY">返回Y坐标没找到返回-1</param>
            <returns>返回字符串的索引 没找到返回-1, 比如"长安|洛阳",若找到长安，则返回0</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitStrd(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32)">
            <summary>
等待文字消失(FindStr),在给定的超时时间段内监控文字
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param>
            <param name="color_format">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,单位为毫秒,如果超时设置-1无限等待</param>
            <returns>1.文字消失 0.等待超时</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitStr(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
等待文字出现(FindStr),在给定的超时时间段内监控文字
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param>
            <param name="color_format">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,单位为毫秒,如果超时设置-1无限等待</param>
            <param name="intX">返回X坐标没找到返回-1</param>
            <param name="intY">返回Y坐标没找到返回-1</param>
            <returns>返回字符串的索引 没找到返回-1, 比如"长安|洛阳",若找到长安，则返回0</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitPicd(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
等待图片消失(FindPic),在给定的超时时间段内监控图片
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="pic_name">图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"</param>
            <param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,单位为毫秒,如果超时设置-1无限等待</param>
            <returns>1.图片找不到了 0.等待超时</returns>
        </member>
        <member name="M:XGLib.XGDm.WaitPic(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
等待图片出现(FindPic),在给定的超时时间段内监控图片
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="pic_name">图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"</param>
            <param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param>
            <param name="delay">每次循环的间隔时间,单位为毫秒</param>
            <param name="outTime">超时时间,单位为毫秒,如果超时设置-1无限等待</param>
            <param name="intX">返回图片左上角的X坐标</param>
            <param name="intY">返回图片左上角的Y坐标</param>
            <returns>返回找到的图片的序号,从0开始索引.如果没找到返回-1</returns>
        </member>
        <member name="M:XGLib.XGDm.MiddleUp">
            <summary>
弹起鼠标中键
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.MiddleDown">
            <summary>
按住鼠标中键
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.LoadPicByte(System.Int32,System.Int32,System.String)">
            <summary>
预先加载指定的图片,这样在操作任何和图片相关的函数时,将省去了加载图片的时间。调用此函数后,没必要一定要调用FreePic,插件自己会自动释放
</summary>&gt;
<param name="addr">BMP图像首地址.(完整的BMP图像，不是经过解析的. 和BMP文件里的内容一致)</param><param name="size">BMP图像大小.(和BMP文件大小一致)</param><param name="name">文件名,指定这个地址对应的图片名. 用于找图时使用</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqIsPosted">
            <summary>
用于判断当前对象是否有发送过答题(FaqPost)
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnablePicCache(System.Int32)">
            <summary>
设置是否开启或者关闭插件内部的图片缓存机制. (默认是打开).
</summary>&gt;
<param name="enable">0.关闭 1.开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarSetTrans(System.IntPtr,System.Int32,System.String,System.Double)">
            <summary>
设置指定Foobar窗口的是否透明
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><param name="is_trans">是否透明. 0为不透明(此时,color和sim无效)，1为透明</param><param name="color">透明色(RRGGBB)</param><param name="sim">透明色的相似值 0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetAero(System.Int32)">
            <summary>
设置开启或者关闭系统的Aero效果. (仅对WIN7及以上系统有效)
</summary>&gt;
<param name="enable">0.关闭 1.开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableFontSmooth">
            <summary>
开启当前系统屏幕字体平滑.同时开启系统的ClearType功能
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.OcrExOne(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double)">
            <summary>
识字 返回识别到的字符串 格式如  "识别到的信息|x0,y0|…|xn,yn"
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color_format">颜色格式串.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetDisplayInfo">
            <summary>
获取本机的显卡信息
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumWindowByProcessId(System.Int32,System.String,System.String,System.Int32)">
            <summary>
根据指定进程pid以及其它条件,枚举系统中符合条件的窗口,可以枚举到按键自带的无法枚举到的窗口
</summary>&gt;
<param name="pid">进程pid</param><param name="title">窗口标题. 此参数是模糊匹配</param><param name="class_name">窗口类名. 此参数是模糊匹配</param><param name="filter">取值定义如下 1 : 匹配窗口标题,参数title有效 2 : 匹配窗口类名,参数class_name有效 8 : 匹配所有者窗口为0的窗口,即顶级窗口 16 : 匹配可见的窗口 这些值可以相加,比如2+8+16</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SendStringIme2(System.IntPtr,System.String,System.Int32)">
            <summary>
利用真实的输入法，对指定的窗口输入文字
</summary>&gt;
<param name="hwnd">窗口句柄</param><param name="str">发送的文本数据</param><param name="mode">取值意义如下 0 : 向hwnd的窗口输入文字(前提是必须先用模式200安装了输入法) 1 : 同模式0,如果由于保护无效，可以尝试此模式.(前提是必须先用模式200安装了输入法) 2 : 同模式0,如果由于保护无效，可以尝试此模式. (前提是必须先用模式200安装了输入法) 200 : 向系统中安装输入法,多次调用没问题. 全局只用安装一次 300 : 卸载系统中的输入法. 全局只用卸载一次. 多次调用没关系</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.InitCri">
            <summary>
初始化临界区,必须在脚本开头调用一次
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.SwitchBindWindow(System.IntPtr)">
            <summary>
在不解绑的情况下,切换绑定窗口.(必须是同进程窗口)
</summary>&gt;
<param name="hwnd">需要切换过去的窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumIniKeyPwd(System.String,System.String,System.String)">
            <summary>
根据指定的ini文件以及section,枚举此section中所有的key名.可支持加密文件 每个key用"|"来连接，如果没有key，则返回空字符串. 比如"aaa|bbb|ccc" 
</summary>&gt;
<param name="section">小节名. (不可为空)</param><param name="file">ini文件名</param><param name="pwd">密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumIniKey(System.String,System.String)">
            <summary>
根据指定的ini文件以及section,枚举此section中所有的key名  每个key用"|"来连接，如果没有key，则返回空字符串. 比如"aaa|bbb|ccc"
</summary>&gt;
<param name="section">小节名. (不可为空)</param><param name="file">ini文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumIniSectionPwd(System.String,System.String)">
            <summary>
根据指定的ini文件,枚举此ini中所有的Section(小节名) 可支持加密文件 每个小节名用"|"来连接，如果没有小节，则返回空字符串. 比如"aaa|bbb|ccc"
</summary>&gt;
<param name="file">ini文件名</param><param name="pwd">密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumIniSection(System.String)">
            <summary>
根据指定的ini文件,枚举此ini中所有的Section(小节名)  每个小节名用"|"来连接，如果没有小节，则返回空字符串. 比如"aaa|bbb|ccc"
</summary>&gt;
<param name="file">ini文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.OpenProcess(System.Int32)">
            <summary>
根据指定pid打开进程，并返回进程句柄
</summary>&gt;
<param name="pid">进程pid</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindColorBlockEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
查找指定区域内的所有颜色块,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="count">在宽度为width,高度为height的颜色块中，符合color颜色的最小数量.(注意,这个颜色数量可以在综合工具的二值化区域中看到)</param><param name="width">颜色块的宽度</param><param name="height">颜色块的高度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindColorBlock(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
查找指定区域内的颜色块,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="count">在宽度为width,高度为height的颜色块中，符合color颜色的最小数量.(注意,这个颜色数量可以在综合工具的二值化区域中看到)</param><param name="width">颜色块的宽度</param><param name="height">颜色块的高度</param><param name="x">返回X坐标(指向颜色块的左上角)</param><param name="y">返回Y坐标(指向颜色块的左上角)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.Delays(System.Int32,System.Int32)">
            <summary>
延时指定范围内随机毫秒,过程中不阻塞UI操作. 一般高级语言使用.按键用不到
</summary>&gt;
<param name="min_s">最小毫秒数</param><param name="max_s">最大毫秒数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteStringAddr(System.IntPtr,System.Int32,System.Int32,System.String)">
            <summary>
对指定地址写入字符串，可以是Ascii字符串或者是Unicode字符串
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="type">字符串类型,取值如下 0 : Ascii字符串 1 : Unicode字符串</param><param name="v">字符串</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteIntAddr(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
对指定地址写入整数数值，类型可以是8位，16位 或者 32位
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="type">整数类型,取值如下 0 : 32位 1 : 16 位  2 : 8位</param><param name="v">整形数值</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteFloatAddr(System.IntPtr,System.Int32,System.Single)">
            <summary>
对指定地址写入单精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="v">单精度浮点数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteDoubleAddr(System.IntPtr,System.Int32,System.Double)">
            <summary>
对指定地址写入双精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="v">双精度浮点数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteDataAddr(System.IntPtr,System.Int32,System.String)">
            <summary>
对指定地址写入二进制数据
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="data">二进制数据，以字符串形式描述，比如"12 34 56 78 90 ab cd"</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadStringAddr(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
读取指定地址的字符串，可以是GBK字符串或者是Unicode字符串.(必须事先知道内存区的字符串编码方式)
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="type">字符串类型,取值如下 0 : GBK字符串 1 : Unicode字符串</param><param name="len">需要读取的字节数目.如果为0，则自动判定字符串长度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadFloatAddr(System.IntPtr,System.Int32)">
            <summary>
读取指定地址的单精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadDoubleAddr(System.IntPtr,System.Int32)">
            <summary>
读取指定地址的双精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadDataAddr(System.IntPtr,System.Int32,System.Int32)">
            <summary>
读取指定地址的二进制数据
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="len">二进制数据的长度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadIntAddr(System.IntPtr,System.Int32,System.Int32)">
            <summary>
读取指定地址的整数数值，类型可以是8位，16位 或者 32位
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">地址</param><param name="type">整数类型,取值如下 0 : 32位有符号 1 : 16 位有符号 2 : 8位有符号 3 : 16位无符号 4 : 8位无符号</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetProcessInfo(System.Int32)">
            <summary>
根据指定的pid获取进程详细信息,(进程名,进程全路径,CPU占用率(百分比),内存占用量(字节))  格式"进程名|进程路径|cpu|内存"
</summary>&gt;
<param name="pid">进程pid</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumProcess(System.String)">
            <summary>
根据指定进程名,枚举系统中符合条件的进程PID,并且按照进程打开顺序排序  返回所有匹配的进程PID,并按打开顺序排序,格式"pid1,pid2,pid3"
</summary>&gt;
<param name="name">进程名,比如qq.exe</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetNetTimeByIp(System.String)">
            <summary>
根据指定时间服务器IP,从网络获取当前北京时间
</summary>&gt;
<param name="ip">IP或者域名,并且支持多个IP或者域名连接</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.TerminateProcess(System.IntPtr)">
            <summary>
根据指定的PID，强制结束进程
</summary>&gt;
<param name="hwnd">进程ID.  默认是窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetCommandLineW(System.IntPtr)">
            <summary>
获取指定窗口所在进程的启动命令行
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.VirtualFreeEx(System.IntPtr,System.Int32)">
            <summary>
释放用VirtualAllocEx分配的内存
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">VirtualAllocEx返回的地址</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.VirtualAllocEx(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
在指定的窗口所在进程分配一段内存
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">预期的分配地址。如果是0表示自动分配，否则就尝试在此地址上分配内存</param><param name="size">需要分配的内存大小</param><param name="type">需要分配的内存类型，取值如下: 0 : 可读可写可执行 1 : 可读可执行，不可写</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FreeProcessMemory(System.IntPtr)">
            <summary>
释放指定进程的不常用内存
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarStopGif(System.IntPtr,System.Int32,System.Int32,System.String)">
            <summary>
停止在指定foobar里显示的gif动画
</summary>&gt;
<param name="hwnd">指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="pic_name">图像文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarStartGif(System.IntPtr,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
在指定的Foobar窗口绘制gif动画
</summary>&gt;
<param name="hwnd">指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="pic_name">图像文件名</param><param name="repeat_limit">表示重复GIF动画的次数，如果是0表示一直循环显示.大于0，则表示循环指定的次数以后就停止显示</param><param name="delay">表示每帧GIF动画之间的时间间隔.如果是0，表示使用GIF内置的时间，如果大于0，表示使用自定义的时间间隔</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetBindWindow">
            <summary>
获取当前对象已经绑定的窗口句柄. 无绑定返回0
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetDict(System.Int32,System.Int32)">
            <summary>
获取指定字库中指定条目的字库信息
</summary>&gt;
<param name="index">字库序号(0-9)</param><param name="font_index">字库条目序号(从0开始计数,数值不得超过指定字库的字库上限,具体参考GetDictCount)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindMulColor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double)">
            <summary>
查找指定区域内的所有颜色
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetEnumWindowDelay(System.Int32)">
            <summary>
设置EnumWindow  EnumWindowByProcess  EnumWindowSuper FindWindow以及FindWindowEx的最长延时. 内部默认超时是10秒
</summary>&gt;
<param name="delay">单位毫秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.RegExNoMac(System.String,System.String,System.String)">
            <summary>
调用此函数来注册，从而使用插件的高级功能. 可以根据指定的IP列表来注册.新手不建议使用! 此函数同RegEx函数的不同在于,此函数用于注册的机器码是不带mac地址的
</summary>&gt;
<param name="code">注册码. (从大漠插件后台获取</param><param name="Ver">版本附加信息. 可以在后台详细信息查看.可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本</param><param name="ip">插件注册的ip地址.可以用|来组合,依次对ip中的地址进行注册，直到成功. ip地址列表在VIP群中获取</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.RegNoMac(System.String,System.String)">
            <summary>
调用此函数来注册，从而使用插件的高级功能.推荐使用此函数. 新手不建议使用! 此函数同Reg函数的不同在于,此函数用于注册的机器码是不带mac地址的
</summary>&gt;
<param name="code">注册码. (从大漠插件后台获取)</param><param name="Ver">版本附加信息. 可以在后台详细信息查看. 可以任意填写. 可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableMouseMsg(System.Int32)">
            <summary>
是否在使用dx鼠标时开启windows消息.默认开启
</summary>&gt;
<param name="en">0 禁止 1开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableKeypadMsg(System.Int32)">
            <summary>
是否在使用dx键盘时开启windows消息.默认开启
</summary>&gt;
<param name="en">0 禁止 1开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DownloadFile(System.String,System.String,System.Int32)">
            <summary>
从internet上下载一个文件
</summary>&gt;
<param name="url">下载的url地址</param><param name="save_file">要保存的文件名</param><param name="timeout">连接超时时间，单位是毫秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumWindowSuper(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
根据两组设定条件来枚举指定窗口
</summary>&gt;
<param name="spec1">查找串1. (内容取决于flag1的值)</param><param name="flag1">0表示spec1的内容是标题 1表示spec1的内容是程序名字. (比如notepad) 2表示spec1的内容是类名 3表示spec1的内容是程序路径.(不包含盘符,比如\windows\system32) 4表示spec1的内容是父句柄.(十进制表达的串) 5表示spec1的内容是父窗口标题 6表示spec1的内容是父窗口类名 7表示spec1的内容是顶级窗口句柄.(十进制表达的串) 8表示spec1的内容是顶级窗口标题 9表示spec1的内容是顶级窗口类名</param><param name="type1">0精确判断 1模糊判断</param><param name="spec2">查找串2. (内容取决于flag2的值)</param><param name="flag2">0表示spec1的内容是标题 1表示spec1的内容是程序名字. (比如notepad) 2表示spec1的内容是类名 3表示spec1的内容是程序路径.(不包含盘符,比如\windows\system32) 4表示spec1的内容是父句柄.(十进制表达的串) 5表示spec1的内容是父窗口标题 6表示spec1的内容是父窗口类名 7表示spec1的内容是顶级窗口句柄.(十进制表达的串) 8表示spec1的内容是顶级窗口标题 9表示spec1的内容是顶级窗口类名</param><param name="type2">0精确判断 1模糊判断</param><param name="sort">0不排序 1对枚举出的窗口进行排序,按照窗口打开顺序</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarSetSave(System.IntPtr,System.String,System.Int32,System.String)">
            <summary>
设置保存指定的Foobar滚动文本区信息到文件
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><param name="file">保存的文件名</param><param name="en">0 : 关闭向文件输出 (默认是0)  1 : 开启向文件输出</param><param name="header">输出的附加头信息. (比如行数 日期 时间信息) 格式是如下格式串的顺序组合.如果为空串，表示无附加头 "%L0nd%" 表示附加头信息带有行号，并且是按照十进制输出. n表示按多少个十进制数字补0对齐. 比如"%L04d%",输出的行号为0001  0002 0003等. "%L03d",输出的行号为001 002 003..等  "%L0nx%"表示附加头信息带有行号，并且是按照16进制小写输出. n表示按多少个16进制数字补0对齐. 比如"%L04x%",输出的行号为0009  000a 000b等. "%L03x",输出的行号为009 00a 00b..等  "%L0nX%"表示附加头信息带有行号，并且是按照16进制大写输出. n表示按多少个16进制数字补0对齐. 比如"%L04X%",输出的行号为0009  000A 000B等. "%L03X",输出的行号为009 00A 00B..等  "%yyyy%"表示年. 比如2012  "%MM%"表示月. 比如12 "%dd%"表示日. 比如28 "%hh%"表示小时. 比如13  "%mm%"表示分钟. 比如59   "%ss%"表示秒. 比如48</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.LockDisplay(System.Int32)">
            <summary>
锁定指定窗口的图色数据(不刷新).
</summary>&gt;
<param name="lock">0关闭锁定  1 开启锁定</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SelectDirectory">
            <summary>
弹出选择文件夹对话框，并返回选择的文件夹
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.SelectFile">
            <summary>
弹出选择文件对话框，并返回选择的文件
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.Reg(System.String,System.String)">
            <summary>
调用此函数来注册，从而使用插件的高级功能.推荐使用此函数 
</summary>&gt;
<param name="code">注册码. (从大漠插件后台获取)</param><param name="Ver">版本附加信息. 可以在后台详细信息查看. 可以任意填写. 可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableIme(System.Int32)">
            <summary>
设置是否关闭绑定窗口所在进程的输入法
</summary>&gt;
<param name="en">1 开启  0 关闭</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableSpeedDx(System.Int32)">
            <summary>
设置是否开启高速dx键鼠模式。 默认是关闭
</summary>&gt;
<param name="en">0 关闭  1 开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DeleteIniPwd(System.String,System.String,System.String,System.String)">
            <summary>
删除指定的ini小节.支持加密文件
</summary>&gt;
<param name="section">小节名</param><param name="key">变量名. 如果这个变量为空串，则删除整个section小节</param><param name="file">ini文件名</param><param name="pwd">密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DeleteIni(System.String,System.String,System.String)">
            <summary>
删除指定的ini小节
</summary>&gt;
<param name="section">小节名</param><param name="key">变量名. 如果这个变量为空串，则删除整个section小节</param><param name="file">ini文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WaitKey(System.Int32,System.Int32)">
            <summary>
等待指定的按键按下 (前台,不是后台)
</summary>&gt;
<param name="key_code">虚拟按键码,当此值为0，表示等待任意按键</param><param name="time_out">等待多久,单位毫秒. 如果是0，表示一直等待</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadFile(System.String)">
            <summary>
从指定的文件读取内容
</summary>&gt;
<param name="file">文件</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetFileLength(System.String)">
            <summary>
获取指定的文件长度
</summary>&gt;
<param name="file">文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DeleteFolder(System.String)">
            <summary>
删除指定目录
</summary>&gt;
<param name="folder_name">目录名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CreateFolder(System.String)">
            <summary>
创建指定目录
</summary>&gt;
<param name="folder_name">目录名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.MoveFile(System.String,System.String)">
            <summary>
移动文件
</summary>&gt;
<param name="src_file">原始文件名</param><param name="dst_file">目标文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DeleteFile(System.String)">
            <summary>
删除文件
</summary>&gt;
<param name="file">文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.IsFileExist(System.String)">
            <summary>
判断指定文件是否存在
</summary>&gt;
<param name="file">文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CopyFile(System.String,System.String,System.Int32)">
            <summary>
拷贝文件
</summary>&gt;
<param name="src_file">原始文件名</param><param name="dst_file">目标文件名</param><param name="over">0 : 如果dst_file文件存在则不覆盖返回  1 : 如果dst_file文件存在则覆盖</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetKeyState(System.Int32)">
            <summary>
获取指定的按键状态.(前台信息,不是后台)
</summary>&gt;
<param name="vk_code">虚拟键码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.IsDisplayDead(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
判断指定的区域，在指定的时间内(秒),图像数据是否一直不变.(卡屏)
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="t">需要等待的时间,单位是秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SendPaste(System.IntPtr)">
            <summary>
向指定窗口发送粘贴命令. 把剪贴板的内容发送到目标窗口
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.LockMouseRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
设置前台鼠标在屏幕上的活动范围
</summary>&gt;
<param name="x1">区域的左上X坐标. 屏幕坐标</param><param name="y1">区域的左上Y坐标. 屏幕坐标</param><param name="x2">区域的右下X坐标. 屏幕坐标</param><param name="y2">区域的右下Y坐标. 屏幕坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetSimMode(System.Int32)">
            <summary>
设置前台键鼠的模拟方式
</summary>&gt;
<param name="mode">0 正常模式(默认模式)  1 超级模拟(隐藏驱动)  2 硬件模拟(隐藏驱动)  3 超级模拟(但是不隐藏驱动,如果隐藏了驱动有一些异常情况,可以考虑不隐藏)  4 硬件模拟(但是不隐藏驱动,如果隐藏了驱动有一些异常情况,可以考虑不隐藏)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableBind(System.Int32)">
            <summary>
设置是否暂时关闭或者开启后台功能. 默认是开启
</summary>&gt;
<param name="en">0 全部关闭(图色键鼠都关闭,也就是说图色,键鼠都是前台,但是如果有指定dx.public.active.message时，在窗口前后台切换时，这个属性会失效.)  -1 只关闭图色.(也就是说图色是normal前台. 键鼠不变)  1 开启(恢复原始状态)  5 同0，也是全部关闭，但是这个模式下，就算窗口在前后台切换时，属性dx.public.active.message的效果也一样不会失效</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetMemoryFindResultToFile(System.String)">
            <summary>
设置是否把所有内存查找接口的结果保存入指定文件
</summary>&gt;
<param name="file">设置要保存的搜索结果文件名. 如果为空字符串表示取消此功能</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.StringToData(System.String,System.Int32)">
            <summary>
把字符串转换成二进制形式
</summary>&gt;
<param name="string_value">需要转化的字符串</param><param name="type">0: 返回Ascii表达的字符串  1: 返回Unicode表达的字符串</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DoubleToData(System.Double)">
            <summary>
把双精度浮点数转换成二进制形式
</summary>&gt;
<param name="double_value">需要转化的双精度浮点数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FloatToData(System.Single)">
            <summary>
把单精度浮点数转换成二进制形式
</summary>&gt;
<param name="float_value">需要转化的单精度浮点数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.IntToData(System.Int32,System.Int32)">
            <summary>
把整数转换成二进制形式
</summary>&gt;
<param name="int_value">需要转化的整型数</param><param name="type">0: 4字节整形数 (一般都选这个)  1: 2字节整形数 2: 1字节整形数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqCancel">
            <summary>
可以把上次FaqPost的发送取消,接着下一次FaqPost
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetCursorShapeEx(System.Int32)">
            <summary>
获取鼠标特征码. 当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时获取到的是后台鼠标特征，否则是前台鼠标特征
</summary>&gt;
<param name="type">获取鼠标特征码的方式. 和工具中的方式1 方式2对应. 方式1此参数值为0. 方式2此参数值为1</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EncodeFile(System.String,System.String)">
            <summary>
加密指定的文件
</summary>&gt;
<param name="file">文件名</param><param name="pwd">密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetScreenDataBmp(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
获取指定区域的图像,用24位位图的数据格式返回,（不适合按键使用）方便二次开发
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="data">返回图片的数据指针</param><param name="size">返回图片的数据长度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableFakeActive(System.Int32)">
            <summary>
设置是否开启后台假激活功能. 默认是关闭. 一般用不到. 除非有人有特殊需求
</summary>&gt;
<param name="en">0 关闭  1 开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetClientRect(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
获取窗口客户区域在屏幕上的位置
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="x1">返回窗口客户区左上角X坐标</param><param name="y1">返回窗口客户区左上角Y坐标</param><param name="x2">返回窗口客户区右下角X坐标</param><param name="y2">返回窗口客户区右下角Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetMachineCodeNoMac">
            <summary>
获取本机的机器码.(不带网卡) 要求调用进程必须有管理员权限. 否则返回空串
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.ClearDict(System.Int32)">
            <summary>
清空指定的字库
</summary>&gt;
<param name="index">字库的序号,取值为0-19,目前最多支持20个字库</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindPicExS(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_name">图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"</param><param name="delta_color">颜色色偏 比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindPicS(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理 个函数可以查找多个图片,只返回第一个找到的X Y坐标. 此函数同FindPic.只是返回值不同
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_name">图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"</param><param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><param name="x">返回图片左上角的X坐标</param><param name="y">返回图片左上角的Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrFastExS(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
同FindStrExS
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrFastS(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32@,System.Int32@)">
            <summary>
同FindStrS
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="x">返回X坐标 没找到返回-1</param><param name="y">返回Y坐标 没找到返回-1</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrExS(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意字符串的组合),并返回符合color_format的所有坐标位置,相似度sim同Ocr接口描述 此函数同FindStrEx,只是返回值不同
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrS(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32@,System.Int32@)">
            <summary>
在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color_format的坐标位置,相似度sim同Ocr接口描述
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="x">返回X坐标 没找到返回-1</param><param name="y">返回Y坐标 没找到返回-1</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindShapeEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32)">
            <summary>
查找所有指定的形状的坐标. 形状的描述同按键的抓抓. 具体可以参考按键的抓抓 和按键的语法不同，需要用大漠综合工具的颜色转换
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="offset_color">坐标偏移描述 可以支持任意多个点 格式和按键自带的Color插件意义相同 格式为"x1|y1|e1,……xn|yn|en" 比如"1|3|1,-5|-3|0"等任意组合都可以</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindShapeE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32)">
            <summary>
查找指定的形状. 形状的描述同按键的抓抓. 具体可以参考按键的抓抓 和按键的语法不同，需要用大漠综合工具的颜色转换
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="offset_color">坐标偏移描述 可以支持任意多个点 格式和按键自带的Color插件意义相同 格式为"x1|y1|e1,……xn|yn|en" 比如"1|3|1,-5|-3|0"等任意组合都可以</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindShape(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
查找指定的形状. 形状的描述同按键的抓抓. 具体可以参考按键的抓抓  和按键的语法不同，需要用大漠综合工具的颜色转换
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="offset_color">坐标偏移描述 可以支持任意多个点 格式和按键自带的Color插件意义相同 格式为"x1|y1|e1,……xn|yn|en" 比如"1|3|1,-5|-3|0"等任意组合都可以</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><param name="x">返回X坐标(坐标为形状(0,0)所在坐标)</param><param name="y">返回Y坐标(坐标为形状(0,0)所在坐标)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetMemoryHwndAsProcessId(System.Int32)">
            <summary>
设置是否把所有内存接口函数中的窗口句柄当作进程ID,以支持直接以进程ID来使用内存接口
</summary>&gt;
<param name="en">0 : 关闭  1 : 开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DisablePowerSave">
            <summary>
关闭电源管理，不会进入睡眠
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.DisableScreenSave">
            <summary>
关闭屏幕保护
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetDmCount">
            <summary>
返回当前进程已经创建的dm对象个数
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetDisplayDelay(System.Int32)">
            <summary>
设置dx截图最长等待时间。内部默认是3000毫秒. 一般用不到调整这个
</summary>&gt;
<param name="t">等待时间，单位是毫秒。 注意这里不能设置的过小，否则可能会导致截图失败,从而导致图色函数和文字识别失败</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.IsBind(System.IntPtr)">
            <summary>
判定指定窗口是否已经被后台绑定. (前台无法判定)
</summary>&gt;
<param name="hwnd">窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意字符串的组合),并返回符合color_format的所有坐标位置,相似度sim同Ocr接口描述
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarDrawLine(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
在指定的Foobar窗口内部画线条
</summary>&gt;
<param name="hwnd">指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的</param><param name="x1">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y1">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="x2">右下角X坐标(相对于hwnd客户区坐标)</param><param name="y2">右下角Y坐标(相对于hwnd客户区坐标)</param><param name="color">填充的颜色值</param><param name="style">画笔类型. 0为实线. 1为虚线</param><param name="width">线条宽度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SendStringIme(System.String)">
            <summary>
向绑定的窗口发送文本数据.必须配合dx.public.input.ime属性
</summary>&gt;
<param name="str">发送的文本数据</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableRealKeypad(System.Int32)">
            <summary>
键盘动作模拟真实操作,点击延时随机
</summary>&gt;
<param name="en">0 关闭模拟  1 开启模拟</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableRealMouse(System.Int32,System.Int32,System.Int32)">
            <summary>
鼠标动作模拟真实操作,带移动轨迹,以及点击延时随机
</summary>&gt;
<param name="en">0 关闭模拟 1 开启模拟(直线模拟) 2 开启模式(随机曲线,更接近真实)</param><param name="mousedelay">单位是毫秒. 表示在模拟鼠标移动轨迹时,每移动一次的时间间隔.这个值越大,鼠标移动越慢</param><param name="mousestep">表示在模拟鼠标移动轨迹时,每移动一次的距离. 这个值越大，鼠标移动越快速</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindDataEx(System.IntPtr,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
搜索指定的二进制数据
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="data">要搜索的二进制数据 以字符串的形式描述比如"00 01 23 45 67 86 ab ce f1"等  这里也可以支持模糊查找,用??来代替单个字节. 比如"00 01 ?? ?? 67 86 ?? ce f1"等</param><param name="step">搜索步长</param><param name="multi_thread">表示是否开启多线程查找.  0不开启，1开启 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU</param><param name="mode">1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStringEx(System.IntPtr,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
搜索指定的字符串
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="string_value">搜索的字符串</param><param name="type">搜索的字符串类型,取值如下 0 : Ascii字符串  1 : Unicode字符串</param><param name="step">搜索步长</param><param name="multi_thread">表示是否开启多线程查找.  0不开启，1开启  开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU</param><param name="mode">1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindDoubleEx(System.IntPtr,System.String,System.Double,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
搜索指定的双精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="double_value_min">搜索的双精度数值最小值</param><param name="double_value_max">双精度浮点数: 搜索的双精度数值最大值 最终搜索的数值大与等于double_value_min,并且小于等于double_value_max</param><param name="step">搜索步长</param><param name="multi_thread">表示是否开启多线程查找.  0不开启，1开启 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU</param><param name="mode">1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindFloatEx(System.IntPtr,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
搜索指定的单精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="float_value_min">搜索的单精度数值最小值</param><param name="float_value_max">搜索的单精度数值最大值 最终搜索的数值大与等于float_value_min,并且小于等于float_value_max</param><param name="step">搜索步长</param><param name="multi_thread">表示是否开启多线程查找.  0不开启，1开启  开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU</param><param name="mode">1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindIntEx(System.IntPtr,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
搜索指定的整数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="int_value_min">搜索的整数数值最小值</param><param name="int_value_max">搜索的整数数值最大值 最终搜索的数值大与等于int_value_min,并且小于等于int_value_max</param><param name="type">搜索的整数类型,取值如下  0 : 32位  1 : 16 位  2 : 8位</param><param name="step">搜索步长</param><param name="multi_thread">表示是否开启多线程查找.  0不开启，1开启  开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU</param><param name="mode">1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqCaptureFromFile(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
截取指定图片中的图像,并返回此句柄
</summary>&gt;
<param name="x1">左上角X坐标</param><param name="y1">左上角Y坐标</param><param name="x2">右下角X坐标</param><param name="y2">右下角Y坐标</param><param name="file">图片文件名,图像格式基本都支持</param><param name="quality">图像或动画品质,或者叫压缩率,此值越大图像质量越好 取值范围（1-100或者250）.当此值为250时,会截取无损bmp图像数据</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DmGuard(System.Int32,System.String)">
            <summary>
针对部分检测措施的保护盾
</summary>&gt;
<param name="en">0表示关闭保护盾,1表示打开保护盾(同时会隐藏驱动). 2表示打开保护盾(但是不隐藏驱动,如果隐藏了驱动有一些异常情况，可以考虑不隐藏)</param><param name="type">"np" : 这个是防止NP检测  "np2 [restore]" : 在NP下保护后台可以正常运行. 另还可以在部分窗口函数失效时或者绑定函数失败时使用此保护盾.(比如移动窗口等).restore是可选参数，增加此参数表示恢复部分驱动钩子,保证后台正常.(此模式需要加载驱动,目前仅支持32位系统) "memory" : 这个保护内存系列接口和汇编接口可以正常运行.(不用带dx.public.memory的情况下) (此模式需要加载驱动,目前仅支持32位系统)  "phide [pid]" : 隐藏制定进程,保护指定进程以及进程内的窗口不被非法访问. pid为可选参数.如果不指定pid，默认保护当前进程. (此模式需要加载驱动,目前仅支持32位系统) "phide2 [pid]" : 同phide. 只是进程不隐藏(可在任务管理器中操作) (此模式需要加载驱动,目前仅支持32位系统) "phide3 [pid]" : 只隐藏进程(在任务管理器看不到),但不保护进程. (此模式需要加载驱动,目前仅支持32位系统)  "display2" : 同display,但此模式用在一些极端的场合. 比如用任何截图软件也无法截图时，可以考虑这个盾  "block [pid]" : 保护指定进程以及进程内的窗口不被非法访问. pid为可选参数.如果不指定pid，默认保护当前进程.(此模式需要加载驱动,目前仅支持32位系统) 效果同phide，但实现原理不同. (此模式需要加载驱动,目前仅支持32位系统)  "display" : 当绑定图色为"normal","dx2","gdi","dx3"时，此保护盾可以防止图色被恶意检测. (此模式需要加载驱动,目前仅支持32位系统)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableMouseSync(System.Int32,System.Int32)">
            <summary>
鼠标消息采用同步发送模式.默认异步
</summary>&gt;
<param name="en">0 禁止同步 1开启同步</param><param name="time_out">单位是毫秒,表示同步等待的最大时间</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableKeypadSync(System.Int32,System.Int32)">
            <summary>
键盘消息采用同步发送模式.默认异步
</summary>&gt;
<param name="en">0 禁止同步 1开启同步</param><param name="time_out">单位是毫秒,表示同步等待的最大时间</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableKeypadPatch(System.Int32)">
            <summary>
键盘消息发送补丁. 默认是关闭
</summary>&gt;
<param name="en">0 禁止 1开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.KeyPressStr(System.String,System.Int32)">
            <summary>
根据指定的字符串序列，依次按顺序按下其中的字符
</summary>&gt;
<param name="key_str">需要按下的字符串序列. 比如"1234","abcd","7389,1462"等</param><param name="delay">每按下一个按键，需要延时多久. 单位毫秒.这个值越大，按的速度越慢</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.KeyPressChar(System.String)">
            <summary>
按下指定的虚拟键码
</summary>&gt;
<param name="key_str">字符串描述的键码. 大小写无所谓</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.KeyUpChar(System.String)">
            <summary>
弹起来虚拟键key_str
</summary>&gt;
<param name="key_str">字符串描述的键码. 大小写无所谓</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.KeyDownChar(System.String)">
            <summary>
按住指定的虚拟键码
</summary>&gt;
<param name="key_str">字符串描述的键码. 大小写无所谓 如 "B"</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.DecodeFile(System.String,System.String)">
            <summary>
解密指定的文件
</summary>&gt;
<param name="file">文件名</param><param name="pwd">密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteIniPwd(System.String,System.String,System.String,System.String,System.String)">
            <summary>
向指定的Ini写入信息.支持加密文件
</summary>&gt;
<param name="section">小节名</param><param name="key">变量名</param><param name="v">变量内容</param><param name="file">ini文件名</param><param name="pwd">密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadIniPwd(System.String,System.String,System.String,System.String)">
            <summary>
从Ini中读取指定信息.可支持加密文件
</summary>&gt;
<param name="section">小节名</param><param name="key">变量名</param><param name="file">ini文件名</param><param name="pwd">密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ForceUnBindWindow(System.IntPtr)">
            <summary>
强制解除绑定窗口,并释放系统资源  另外，需要注意的是,此函数只可以强制解绑在同进程绑定的窗口.  不可在不同的进程解绑别的进程绑定的窗口.(会产生异常)
</summary>&gt;
<param name="hwnd">需要强制解除绑定的窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetDictMem(System.Int32,System.Int32,System.Int32)">
            <summary>
从内存中设置字库
</summary>&gt;
<param name="index">字库的序号,取值为0-19,目前最多支持20个字库</param><param name="addr">数据地址</param><param name="size">字库长度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.Stop(System.Int32)">
            <summary>
停止指定的音乐
</summary>&gt;
<param name="id">Play返回的播放id</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteFile(System.String,System.String)">
            <summary>
向指定文件追加字符串
</summary>&gt;
<param name="file">文件</param><param name="content">写入的字符串</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.AppendPicAddr(System.String,System.Int32,System.Int32)">
            <summary>
对指定的数据地址和长度，组合成新的参数. FindPicMem FindPicMemE 以及FindPicMemEx专用
</summary>&gt;
<param name="pic_info">老的地址描述串</param><param name="addr">数据地址</param><param name="size">数据长度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindPicMemE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_info">图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合 地址表示24位位图资源在内存中的首地址，用十进制的数值表示 长度表示位图资源在内存中的长度，用十进制数值表示</param><param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindPicMemEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_info">图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合 地址表示24位位图资源在内存中的首地址，用十进制的数值表示 长度表示位图资源在内存中的长度，用十进制数值表示</param><param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindPicMem(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_info">图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合 地址表示24位位图资源在内存中的首地址，用十进制的数值表示 长度表示位图资源在内存中的长度，用十进制数值表示</param><param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><param name="x">返回图片左上角的X坐标</param><param name="y">返回图片左上角的Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SortPosDistance(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
根据部分Ex接口的返回值，然后对所有坐标根据对指定坐标的距离进行从小到大的排序
</summary>&gt;
<param name="all_pos">坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx, FindColorEx, FindMultiColorEx,和FindPicEx的返回值</param><param name="type">如果all_pos的内容是由FindPicEx,FindStrEx,FindStrFastEx,FindStrWithFontEx返回，那么取值为0  如果all_pos的内容是由FindColorEx, FindMultiColorEx,FindColorBlockEx返回，那么取值为1</param><param name="x">横坐标</param><param name="y">纵坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindNearestPos(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
根据部分Ex接口的返回值，然后在所有坐标里找出距离指定坐标最近的那个坐标
</summary>&gt;
<param name="all_pos">坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx, FindColorEx, FindMultiColorEx,和FindPicEx的返回值</param><param name="type">如果all_pos的内容是由FindPicEx,FindStrEx,FindStrFastEx,FindStrWithFontEx返回，那么取值为0  如果all_pos的内容是由FindColorEx, FindMultiColorEx,FindColorBlockEx返回，那么取值为1</param><param name="x">横坐标</param><param name="y">纵坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ExcludePos(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
根据部分Ex接口的返回值，排除指定范围区域内的坐标
</summary>&gt;
<param name="all_pos">坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx, FindColorEx, FindMultiColorEx,和FindPicEx的返回值</param><param name="type">如果all_pos的内容是由FindPicEx,FindStrEx,FindStrFastEx,FindStrWithFontEx返回，那么取值为0  如果all_pos的内容是由FindColorEx, FindMultiColorEx,FindColorBlockEx返回，那么取值为1</param><param name="x1">左上角横坐标</param><param name="y1">左上角纵坐标</param><param name="x2">右下角横坐标</param><param name="y2">右下角纵坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindWindowSuper(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
根据两组设定条件来查找指定窗口
</summary>&gt;
<param name="spec1">查找串1. (内容取决于flag1的值)</param><param name="flag1">取值如下 0表示spec1的内容是标题 1表示spec1的内容是程序名字. (比如notepad) 2表示spec1的内容是类名 3表示spec1的内容是程序路径.(不包含盘符,比如\windows\system32) 4表示spec1的内容是父句柄.(十进制表达的串) 5表示spec1的内容是父窗口标题 6表示spec1的内容是父窗口类名 7表示spec1的内容是顶级窗口句柄.(十进制表达的串) 8表示spec1的内容是顶级窗口标题 9表示spec1的内容是顶级窗口类名</param><param name="type1">0精确判断 1模糊判断</param><param name="spec2">查找串2. (内容取决于flag2的值)</param><param name="flag2">0表示spec2的内容是标题 1表示spec2的内容是程序名字. (比如notepad) 2表示spec2的内容是类名 3表示spec2的内容是程序路径.(不包含盘符,比如\windows\system32) 4表示spec2的内容是父句柄.(十进制表达的串) 5表示spec2的内容是父窗口标题 6表示spec2的内容是父窗口类名 7表示spec2的内容是顶级窗口句柄.(十进制表达的串) 8表示spec2的内容是顶级窗口标题 9表示spec2的内容是顶级窗口类名</param><param name="type2">0精确判断 1模糊判断</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.delay(System.Int32)">
            <summary>
延时指定的毫秒,过程中不阻塞UI操作. 一般高级语言使用.按键用不到
</summary>&gt;
<param name="mis">毫秒数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.RunApp(System.String,System.Int32)">
            <summary>
运行指定的应用程序
</summary>&gt;
<param name="path">指定的可执行程序全路径</param><param name="mode">0 : 普通模式  1 : 加强模式</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteIni(System.String,System.String,System.String,System.String)">
            <summary>
向指定的Ini写入信息
</summary>&gt;
<param name="section">小节名</param><param name="key">变量名</param><param name="v">变量内容</param><param name="file">ini文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadIni(System.String,System.String,System.String)">
            <summary>
从Ini中读取指定信息
</summary>&gt;
<param name="section">小节名</param><param name="key">变量名</param><param name="file">ini文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindWindowByProcessId(System.Int32,System.String,System.String)">
            <summary>
根据指定的进程Id，来查找可见窗口
</summary>&gt;
<param name="process_id">进程id</param><param name="class_name">窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配</param><param name="title_name">窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindWindowByProcess(System.String,System.String,System.String)">
            <summary>
根据指定的进程名字，来查找可见窗口
</summary>&gt;
<param name="process_name">进程名. 比如(notepad.exe).这里是精确匹配,但不区分大小写</param><param name="class_name">窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配</param><param name="title_name">窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetDisplayAcceler(System.Int32)">
            <summary>
设置当前系统的硬件加速级别  此函数只在XP 2003系统有效
</summary>&gt;
<param name="level">取值范围为0-5.  0表示关闭硬件加速。5表示完全打开硬件加速</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CheckFontSmooth">
            <summary>
检测当前系统是否有开启屏幕字体平滑
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.DisableFontSmooth">
            <summary>
关闭当前系统屏幕字体平滑.同时关闭系统的ClearType功能
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetUAC(System.Int32)">
            <summary>
设置当前系统的UAC(用户账户控制).
</summary>&gt;
<param name="uac">取值如下 0 : 关闭UAC 1 : 开启UAC</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CheckUAC">
            <summary>
检测当前系统是否有开启UAC(用户账户控制)
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableGetColorByCapture(System.Int32)">
            <summary>
允许调用GetColor GetColorBGR GetColorHSV 以及 CmpColor时，以截图的方式来获取颜色
</summary>&gt;
<param name="en">0 关闭 1 打开</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetNetTime">
            <summary>
从网络获取当前北京时间
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetLastError">
            <summary>
获取插件命令的最后错误  0表示无错误  -1 : 表示你使用了绑定里的收费功能，但是没注册，无法使用 -2 : 使用模式0 2 4 6时出现，因为目标窗口有保护，或者目标窗口没有以管理员权限打开. 常见于win7以上系统.或者有安全软件拦截插件.解决办法: 关闭所有安全软件，并且关闭系统UAC,然后再重新尝试. 如果还不行就可以肯定是目标窗口有特殊保护 -3 : 使用模式0 2 4 6时出现，可能目标窗口有保护，也可能是异常错误.还有可能是绑定的窗口是64位应用程序. 可以尝试换绑定模式或许可以解决 -4 : 使用模式1 3 5 7 101 103时出现，这是异常错误 -5 : 使用模式1 3 5 7 101 103时出现, 这个错误的解决办法就是关闭目标窗口，重新打开再绑定即可. 也可能是运行脚本的进程没有管理员权限 -6 : 被安全软件拦截。典型的是金山.360等. 如果是360关闭即可。 如果是金山，必须卸载，关闭是没用的 -7 -9 : 使用模式1 3 5 7 101 103时出现,异常错误. 还有可能是安全软件的问题，比如360等。尝试卸载360 -8 -10 : 使用模式1 3 5 7 101 103时出现, 目标进程可能有保护,也可能是插件版本过老，试试新的或许可以解决. -8可以尝试使用DmGuard中的np2盾配合 -11 : 使用模式1 3 5 7 101 103时出现, 目标进程有保护. 告诉我解决 -12 : 使用模式1 3 5 7 101 103时出现, 目标进程有保护. 告诉我解决 -13 : 使用模式1 3 5 7 101 103时出现, 目标进程有保护. 或者是因为上次的绑定没有解绑导致。 尝试在绑定前调用ForceUnBindWindow -14 : 使用模式0 1 4 5时出现, 有可能目标机器兼容性不太好. 可以尝试其他模式. 比如2 3 6 7 -16 : 可能使用了绑定模式 0 1 2 3 和 101，然后可能指定了一个子窗口.导致不支持.可以换模式4 5 6 7或者103来尝试. 另外也可以考虑使用父窗口或者顶级窗口.来避免这个错误。还有可能是目标窗口没有正常解绑然后再次绑定的时候 -17 : 模式1 3 5 7 101 103时出现. 这个是异常错误. 告诉我解决 -18 : 句柄无效 -19 : 使用模式0 1 2 3 101时出现,说明你的系统不支持这几个模式. 可以尝试其他模式 -20 : 使用模式1 3 5 7 101 103 时出现,说明目标进程里没有解绑，并且子绑定达到了最大. 尝试在返回这个错误时，调用ForceUnBindWindow来强制解除绑定 -21 : 使用模式1 3 5 7 101 103 时出现,说明目标进程里没有解绑. 尝试在返回这个错误时，调用ForceUnBindWindow来强制解除绑定
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetDictCount(System.Int32)">
            <summary>
获取指定的字库中的字符数量
</summary>&gt;
<param name="index">字库序号(0-9)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumWindowByProcess(System.String,System.String,System.String,System.Int32)">
            <summary>
根据指定进程以及其它条件,枚举系统中符合条件的窗口,可以枚举到按键自带的无法枚举到的窗口
</summary>&gt;
<param name="process_name">进程映像名.比如(svchost.exe). 此参数是精确匹配,但不区分大小写</param><param name="title">窗口标题. 此参数是模糊匹配</param><param name="class_name">窗口类名. 此参数是模糊匹配</param><param name="filter">取值定义如下 1 : 匹配窗口标题,参数title有效 2 : 匹配窗口类名,参数class_name有效 4 : 只匹配指定映像的所对应的第一个进程. 可能有很多同映像名的进程，只匹配第一个进程的 8 : 匹配所有者窗口为0的窗口,即顶级窗口 16 : 匹配可见的窗口 32 : 匹配出的窗口按照窗口打开顺序依次排列 这些值可以相加,比如4+8+16</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetColorNum(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double)">
            <summary>
获取指定区域的颜色数量,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.Is64Bit">
            <summary>
判断当前系统是否是64位操作系统
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetNowDict">
            <summary>
获取当前使用的字库序号(0-9)
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetClipboard">
            <summary>
获取剪贴板的内容
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetClipboard(System.String)">
            <summary>
设置剪贴板的内容
</summary>&gt;
<param name="data">以字符串表示的剪贴板内容</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetMachineCode">
            <summary>
获取本机的机器码.(带网卡). 此机器码用于插件网站后台. 要求调用进程必须有管理员权限. 否则返回空串
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.RegEx(System.String,System.String,System.String)">
            <summary>
调用此函数来注册，从而使用插件的高级功能. 可以根据指定的IP列表来注册. 新手不建议使用
</summary>&gt;
<param name="code">注册码. (从大漠插件后台获取)</param><param name="Ver">版本附加信息. 可以在后台详细信息查看.可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本</param><param name="ip">插件注册的ip地址.可以用|来组合,依次对ip中的地址进行注册，直到成功. ip地址列表在VIP群中获取</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CapturePre(System.String)">
            <summary>
抓取上次操作的图色区域，保存为file(24位位图)
</summary>&gt;
<param name="file">保存的文件名,保存的地方一般为SetPath中设置的目录 当然这里也可以指定全路径名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnableDisplayDebug(System.Int32)">
            <summary>
开启图色调试模式，此模式会稍许降低图色和文字识别的速度.默认不开启
</summary>&gt;
<param name="enable_debug">0 为关闭 1 为开启</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrFastE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
同FindStrE
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrFastEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
同FindStrEx
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrFast(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32@,System.Int32@)">
            <summary>
同FindStr
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="x">返回X坐标 没找到返回-1</param><param name="y">返回Y坐标 没找到返回-1</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ImageToBmp(System.String,System.String)">
            <summary>
转换图片格式为24位BMP格式
</summary>&gt;
<param name="pic_name">要转换的图片名</param><param name="bmp_name">要保存的BMP图片名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CaptureGif(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
抓取指定区域(x1, y1, x2, y2)的动画，保存为gif格式
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="file">保存的文件名,保存的地方一般为SetPath中设置的目录 当然这里也可以指定全路径名</param><param name="delay">动画间隔，单位毫秒。如果为0，表示只截取静态图片</param><param name="time">总共截取多久的动画，单位毫秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CapturePng(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
同Capture函数，只是保存的格式为PNG
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="file">保存的文件名,保存的地方一般为SetPath中设置的目录 当然这里也可以指定全路径名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetID">
            <summary>
返回当前大漠对象的ID值，这个值对于每个对象是唯一存在的。可以用来判定两个大漠对象是否一致
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetPicSize(System.String)">
            <summary>
获取指定图片的尺寸，如果指定的图片已经被加入缓存，则从缓存中获取信息 此接口也会把此图片加入缓存
</summary>&gt;
<param name="pic_name">文件名比如"1.bmp"</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.LockInput(System.Int32)">
            <summary>
禁止外部输入到指定窗口
</summary>&gt;
<param name="lock">0关闭锁定 1 开启锁定(键盘鼠标都锁定) 2 只锁定鼠标 3 只锁定键盘 4 同1,但当您发现某些特殊按键无法锁定时,比如(回车，ESC等)，那就用这个模式吧. 但此模式会让SendString函数后台失效，或者采用和SendString类似原理发送字符串的其他3方函数失效 5 同3,但当您发现某些特殊按键无法锁定时,比如(回车，ESC等)，那就用这个模式吧. 但此模式会让SendString函数后台失效，或者采用和SendString类似原理发送字符串的其他3方函数失效.</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWindowProcessPath(System.IntPtr)">
            <summary>
获取指定窗口所在的进程的exe文件全路径
</summary>&gt;
<param name="hwnd">窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWindowProcessId(System.IntPtr)">
            <summary>
获取指定窗口所在的进程ID
</summary>&gt;
<param name="hwnd">窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SaveDict(System.Int32,System.String)">
            <summary>
保存指定的字库到指定的文件中
</summary>&gt;
<param name="index">字库索引序号 取值为0-9对应10个字库</param><param name="file">文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetDictInfo(System.String,System.String,System.Int32,System.Int32)">
            <summary>
根据指定的文字，以及指定的系统字库信息，获取字库描述信息
</summary>&gt;
<param name="str">需要获取的字符串</param><param name="font_name">系统字体名,比如"宋体"</param><param name="font_size">系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如何获取尺寸看视频教程</param><param name="flag">字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体 1 : 粗体 2 : 斜体  4 : 下划线 8 : 删除线</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrWithFontEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.String,System.Int32,System.Int32)">
            <summary>
同FindStrEx，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStrEx稍慢
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="font_name">系统字体名,比如"宋体"</param><param name="font_size">系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程</param><param name="flag">字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体  1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrWithFontE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.String,System.Int32,System.Int32)">
            <summary>
同FindStrE，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStrE稍慢
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="font_name">系统字体名,比如"宋体"</param><param name="font_size">系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程</param><param name="flag">字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体  1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrWithFont(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
同FindStr，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStr稍慢
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="font_name">系统字体名,比如"宋体"</param><param name="font_size">系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程</param><param name="flag">字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体 1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线</param><param name="x">返回X坐标没找到返回-1</param><param name="y">返回Y坐标没找到返回-1</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CaptureJpg(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
抓取指定区域(x1, y1, x2, y2)的图像,保存为file(JPG压缩格式)
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="file">保存的文件名,保存的地方一般为SetPath中设置的目录 当然这里也可以指定全路径名</param><param name="quality">jpg压缩比率(1-100) 越大图片质量越好</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FetchWord(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
根据指定的范围,以及指定的颜色描述，提取点阵信息，类似于大漠工具里的单独提取
</summary>&gt;
<param name="x1">左上角X坐标</param><param name="y1">左上角Y坐标</param><param name="x2">右下角X坐标</param><param name="y2">右下角Y坐标</param><param name="color">颜色格式串.注意，RGB和HSV格式都支持</param><param name="word">待定义的文字,不能为空，且不能为关键符号"$"</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqFetch">
            <summary>
获取由FaqPost发送后，由服务器返回的答案
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqPost(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
发送指定的图像句柄到指定的服务器,并立即返回(异步操作).
</summary>&gt;
<param name="server">服务器地址以及端口,格式为(ip:port),例如 "192.168.1.100:12345"</param><param name="handle">由FaqCapture获取到的句柄</param><param name="request_type">0 : 要求获取坐标  1 : 要求获取选项,比如(ABCDE)  2 : 要求获取文字答案  3 : 要求获取两个坐标.此功能要求答题器必须是v15之后的版本</param><param name="time_out">表示等待多久,单位是毫秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SendString2(System.IntPtr,System.String)">
            <summary>
向指定窗口发送文本数据
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="str">发送的文本数据</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetCursorSpot">
            <summary>
获取鼠标热点位置.(参考工具中抓取鼠标后，那个闪动的点就是热点坐标,不是鼠标坐标) 当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时获取到的是后台鼠标热点位置，否则是前台鼠标热点位置
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.DownCpu(System.Int32)">
            <summary>
降低目标窗口所在进程的CPU占用  
</summary>&gt;
<param name="rate">取值范围大于0  取值为0 表示关闭CPU优化. 这个值越大表示降低CPU效果越好  新版之后 无上限之前的老版本 0-100</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetCursorShape">
            <summary>
获取鼠标特征码. 当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时 获取到的是后台鼠标特征，否则是前台鼠标特征
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindWindowExW(System.Int32,System.String,System.String)">
            <summary>
查找符合类名或者标题名的顶层可见窗口,如果指定了parent,则在parent的第一层子窗口中查找
</summary>&gt;
<param name="parent">父窗口句柄，如果为空，则匹配所有顶层窗口</param><param name="class_name">窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配</param><param name="title_name">窗口标题,如果为空，则匹配所有. 这里的匹配是模糊匹配</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetOsType">
            <summary>
得到操作系统的类型
</summary>
            <returns>0 : win95/98/me/nt4.0  1 : xp/2000	2 : 2003/2003 R2/xp-64 3 : win7/2008 R2 4 : vista/2008 5 : win8/2012 6 : win8.1/2012 R2  7 : win10/2016 TP</returns>
        </member>
        <member name="M:XGLib.XGDm.GetDir(System.Int32)">
            <summary>
得到系统的路径
</summary>&gt;
<param name="type">0 : 获取当前路径  1 : 获取系统路径(system32路径) 2 : 获取windows路径(windows所在路径) 3 : 获取临时目录路径(temp) 4 : 获取当前进程(exe)所在的路径</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ExitOs(System.Int32)">
            <summary>
退出系统(注销 重启 关机)
</summary>&gt;
<param name="type">取值为以下类型  0 : 注销系统  1 : 关机  2 : 重新启动</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetScreen(System.Int32,System.Int32,System.Int32)">
            <summary>
设置系统的分辨率 系统色深
</summary>&gt;
<param name="width">屏幕宽度</param><param name="height">屏幕高度</param><param name="depth">系统色深 16位或32位</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetScreenDepth">
            <summary>
获取屏幕的色深
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindWindowW(System.String,System.String)">
            <summary>
查找符合类名或者标题名的顶层可见窗口
</summary>&gt;
<param name="class_name">窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配</param><param name="title_name">窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.BindWindow(System.IntPtr,System.String,System.String,System.String,System.Int32)">
            <summary>
绑定指定的窗口,并指定这个窗口的屏幕颜色获取方式,鼠标仿真模式,键盘仿真模式,以及模式设定,高级用户可以参考BindWindowEx更加灵活强大
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="display">屏幕颜色获取方式 取值有以下： "normal" : 前台模式 ，"gdi" : gdi模式 "gdi2" : gdi2模式 ，"dx" : dx模式（参照接口说明），"dx2" : dx2模式(必须窗口小部分移到窗外)，"dx3" : dx3模式</param><param name="mouse">鼠标仿真模式 取值有以下几种 "normal" : 前台模式，"windows": Windows模式,"windows3": Windows3模式，dx模式,取值可以是以下任意组合. 组合采用"|"符号（参照接口说明）</param><param name="keypad">键盘仿真模式 取值有以下几种 "normal" : 正常模式,平常我们用的前台键盘模式 "windows": Windows模式,采取模拟windows消息方式 同按键的后台插件.</param><param name="mode">模式（参照接口说明）默认： 0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetCursorPos(System.Int32@,System.Int32@)">
            <summary>
获取鼠标位置
</summary>&gt;
<param name="x">返回X坐标</param><param name="y">返回Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindInputMethod(System.String)">
            <summary>
检测系统中是否安装了指定输入法
</summary>&gt;
<param name="id">输入法名字。具体输入法名字对应表查看注册表中以下位置 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts 下面的每一项下的Layout Text的值就是输入法名字 比如 "中文 - QQ拼音输入法" 以此类推</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CheckInputMethod(System.IntPtr,System.String)">
            <summary>
检测指定窗口所在线程输入法是否开启
</summary>&gt;
<param name="hwnd">窗口句柄</param><param name="id">输入法名字。具体输入法名字对应表查看注册表中以下位置 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts  下面的每一项下的Layout Text的值就是输入法名字 比如 "中文 - QQ拼音输入法" 以此类推</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ActiveInputMethod(System.IntPtr,System.String)">
            <summary>
激活指定窗口所在进程的输入法
</summary>&gt;
<param name="hwnd">窗口句柄</param><param name="id">输入法名字。具体输入法名字对应表查看注册表中以下位置 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts 下面的每一项下的Layout Text的值就是输入法名字 比如 "中文 - QQ拼音输入法" 以此类推</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetDiskSerial">
            <summary>
获取本机的硬盘序列号.支持ide scsi硬盘. 要求调用进程必须有管理员权限. 否则返回空串
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.BindWindowEx(System.IntPtr,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
绑定指定的窗口,并指定这个窗口的屏幕颜色获取方式,鼠标仿真模式,键盘仿真模式 高级用户使用
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="display">屏幕颜色获取方式 取值有以下： "normal" : 前台模式 ，"gdi" : gdi模式 "gdi2" : gdi2模式 ，"dx" : dx模式（参照接口说明），"dx2" : dx2模式(必须窗口小部分移到窗外)，"dx3" : dx3模式</param><param name="mouse">鼠标仿真模式 取值有以下几种 "normal" : 前台模式，"windows": Windows模式,"windows3": Windows3模式，dx模式,取值可以是以下任意组合. 组合采用"|"符号（参照接口说明）</param><param name="keypad">键盘仿真模式 取值有以下几种 "normal" : 正常模式,平常我们用的前台键盘模式 "windows": Windows模式,采取模拟windows消息方式 同按键的后台插件.</param><param name="public_desc">public 字符串: 公共属性（具体参照接口说明）</param><param name="mode">模式（参照接口说明）默认： 0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetScreenHeight">
            <summary>
获取屏幕的高度
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetScreenWidth">
            <summary>
获取屏幕的宽度
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetTime">
            <summary>
获取当前系统从开机到现在所经历过的时间，单位是毫秒
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetDisplayInput(System.String)">
            <summary>
设定图色的获取方式，默认是显示器或者后台窗口(具体参考BindWindow)
</summary>&gt;
<param name="mode">图色输入模式取值有以下几种  1."screen" 这个是默认的模式，表示使用显示器或者后台窗口  2."pic:file" 指定输入模式为指定的图片,如果使用了这个模式，则所有和图色相关的函数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.OcrEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double)">
            <summary>
识别屏幕范围(x1,y1,x2,y2)内符合color_format的字符串,并且相似度为sim,sim取值范围(0.1-1.0)
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色格式串.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarTextPrintDir(System.IntPtr,System.Int32)">
            <summary>
设置滚动文本区的文字输出方向,默认是0
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><param name="dir">0 表示向下输出  1 表示向上输出</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadString(System.IntPtr,System.String,System.Int32,System.Int32)">
            <summary>
读取指定地址的字符串，可以是GBK字符串或者是Unicode字符串.(必须事先知道内存区的字符串编码方式)
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来 | "4DA678" 最简单的方式，用绝对数值来表示地址 | "&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移  |"[4DA678]+3A" 用绝对数值加偏移，相当于一级指针  "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针  | "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><param name="type">字符串类型,取值如下 0 : GBK字符串 1 : Unicode字符串</param><param name="len">需要读取的字节数目.如果为0，则自动判定字符串长度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetExactOcr(System.Int32)">
            <summary>
高级用户使用,在使用文字识别功能前，设定是否开启精准识别
</summary>&gt;
<param name="exact_ocr">0 表示关闭精准识别 1 开启精准识别</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindMultiColorE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
根据指定的多点查找颜色坐标
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="first_color">颜色 格式为"RRGGBB-DRDGDB|RRGGBB-DRDGDB|…………",比如"123456-000000"</param><param name="offset_color">偏移颜色 可以支持任意多个点 格式和按键自带的Color插件意义相同, 只不过我的可以支持偏色和多种颜色组合</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindPicE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_name">图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"</param><param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindColorE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32)">
            <summary>
查找指定区域内的颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上 4：从中心往外查找 5: 从上到下,从左到右 6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindStrE(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color_format的坐标位置,相似度sim同Ocr接口描述
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="str">待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param><param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param><param name="sim">相似度,取值范围0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetPicPwd(System.String)">
            <summary>
设置图片密码，如果图片本身没有加密，那么此设置不影响不加密的图片，一样正常使用
</summary>&gt;
<param name="pwd">图片密码</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindData(System.IntPtr,System.String,System.String)">
            <summary>
搜索指定的二进制数据,默认步长是1.如果要定制步长，请用FindDataEx
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="data">要搜索的二进制数据 以字符串的形式描述比如"00 01 23 45 67 86 ab ce f1"等 这里也可以支持模糊查找,用??来代替单个字节. 比如"00 01 ?? ?? 67 86 ?? ce f1"等</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteData(System.IntPtr,System.String,System.String)">
            <summary>
对指定地址写入二进制数据
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来 | "4DA678" 最简单的方式，用绝对数值来表示地址 | "&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移 | "[4DA678]+3A" 用绝对数值加偏移，相当于一级指针  "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针  | "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><param name="data">二进制数据，以字符串形式描述，比如"12 34 56 78 90 ab cd"</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadData(System.IntPtr,System.String,System.Int32)">
            <summary>
读取指定地址的二进制数据
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来 | "4DA678" 最简单的方式，用绝对数值来表示地址 | "&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移  |"[4DA678]+3A" 用绝对数值加偏移，相当于一级指针 | "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针  | "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><param name="len">二进制数据的长度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWindowTransparent(System.IntPtr,System.Int32)">
            <summary>
设置窗口的透明度
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="v">透明度取值(0-255) 越小透明度越大 0为完全透明(不可见) 255为完全显示(不透明)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.Assemble(System.String,System.Int32,System.Int32)">
            <summary>
把指定的机器码转换为汇编语言输出
</summary>&gt;
<param name="asm_code">机器码，形式如 "aa bb cc"这样的16进制表示的字符串(空格无所谓)</param><param name="base_addr">指令所在的地址</param><param name="is_upper">表示转换的汇编语言是否以大写输出</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.AsmCode(System.Int32)">
            <summary>
把汇编缓冲区的指令转换为机器码 并用16进制字符串的形式输出
</summary>&gt;
<param name="base_addr">用AsmAdd添加到缓冲区的第一条指令所在的地址</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindMultiColorEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
根据指定的多点查找所有颜色坐标
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="first_color">颜色 格式为"RRGGBB-DRDGDB|RRGGBB-DRDGDB|…………",比如"123456-000000"</param><param name="offset_color">偏移颜色 可以支持任意多个点 格式和按键自带的Color插件意义相同, 只不过我的可以支持偏色和多种颜色组合</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindMultiColor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
根据指定的多点查找颜色坐标
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="first_color">颜色格式为"RRGGBB-DRDGDB",比如"123456-000000" 这里的含义和按键自带Color插件的意义相同，只不过我的可以支持偏色 所有的偏移色坐标都相对于此颜色</param><param name="offset_color">偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同  格式为"x1|y1|RRGGBB-DRDGDB,……xn|yn|RRGGBB-DRDGDB" 比如"1|3|aabbcc,-5|-3|123456-000000"等任意组合都可以，支持偏色 还可以支持反色模式，比如"1|3|-aabbcc,-5|-3|-123456-000000","-"表示除了指定颜色之外的颜色.</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上</param><param name="x">整数型, 传址  , 返回X坐标(坐标为first_color所在坐标)</param><param name="y">整数型, 传址  , 返回Y坐标(坐标为first_color所在坐标)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.AsmCall(System.IntPtr,System.Int32)">
            <summary>
执行用AsmAdd加到缓冲中的指令
</summary>&gt;
<param name="hwnd">窗口句柄</param><param name="mode">模式，取值如下  0 : 在本进程中进行执行，这时hwnd无效  1 : 对hwnd指定的进程内执行,注入模式为创建远程线程</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.AsmClear">
            <summary>
清除汇编指令缓冲区 用AsmAdd添加到缓冲的指令全部清除
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.AsmAdd(System.String)">
            <summary>
添加指定的MASM汇编指令
</summary>&gt;
<param name="asm_ins">MASM汇编指令,大小写均可以  比如 "mov eax,1"</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteString(System.IntPtr,System.String,System.Int32,System.String)">
            <summary>
对指定地址写入字符串，可以是Ascii字符串或者是Unicode字符串
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来 | "4DA678" 最简单的方式，用绝对数值来表示地址 | "&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移 | "[4DA678]+3A" 用绝对数值加偏移，相当于一级指针 | "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针 |  "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><param name="type">字符串类型,取值如下 0 : Ascii字符串  1 : Unicode字符串</param><param name="v">字符串</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteDouble(System.IntPtr,System.String,System.Double)">
            <summary>
对指定地址写入双精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来  "4DA678" 最简单的方式，用绝对数值来表示地址  "&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移  "[4DA678]+3A" 用绝对数值加偏移，相当于一级指针  "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针   "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><param name="v">双精度浮点数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteFloat(System.IntPtr,System.String,System.Single)">
            <summary>
对指定地址写入单精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来  "4DA678" 最简单的方式，用绝对数值来表示地址  "&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移  "[4DA678]+3A" 用绝对数值加偏移，相当于一级指针  "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针   "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><param name="v">单精度浮点数</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WriteInt(System.IntPtr,System.String,System.Int32,System.Int32)">
            <summary>
对指定地址写入整数数值，类型可以是8位，16位 或者 32位
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来 | "4DA678" 最简单的方式，用绝对数值来表示地址  |"&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移 | "[4DA678]+3A" 用绝对数值加偏移，相当于一级指针 | "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针  | "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><param name="type">整数类型,取值如下 0 : 32位 1 : 16 位 2 : 8位</param><param name="v">整形数值</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.LeaveCri">
            <summary>
和EnterCri对应,离开临界区
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnterCri">
            <summary>
检测是否可以进入临界区,如果可以返回1,否则返回0
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.AddDict(System.Int32,System.String)">
            <summary>
给指定的字库中添加一条字库信息
</summary>&gt;
<param name="index">字库的序号,取值为0-19,目前最多支持20个字库</param><param name="dict_info">字库描述串，具体参考大漠综合工具中的字符定义</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.MatchPicName(System.String)">
            <summary>
根据通配符获取文件集合. 方便用于FindPic和FindPicEx
</summary>&gt;
<param name="pic_name">文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件  "a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件 "abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.MoveToEx(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
把鼠标移动到目的范围内的任意一点
</summary>&gt;
<param name="x">X坐标</param><param name="y">Y坐标</param><param name="w">宽度(从x计算起)</param><param name="h">高度(从y计算起)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetModuleBaseAddr(System.IntPtr,System.String)">
            <summary>
根据指定的窗口句柄，来获取对应窗口句柄进程下的指定模块的基址
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="module_name">模块名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindString(System.IntPtr,System.String,System.String,System.Int32)">
            <summary>
搜索指定的字符串,默认步长是1.如果要定制步长，请用FindStringEx
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="string_value">搜索的字符串</param><param name="type">搜索的字符串类型,取值如下 0 : Ascii字符串  1 : Unicode字符串</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindDouble(System.IntPtr,System.String,System.Double,System.Double)">
            <summary>
搜索指定的双精度浮点数,默认步长是1.如果要定制步长，请用FindDoubleEx
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="double_value_min">搜索的双精度数值最小值</param><param name="double_value_max">搜索的双精度数值最大值 最终搜索的数值大与等于double_value_min,并且小于等于double_value_max</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindFloat(System.IntPtr,System.String,System.Single,System.Single)">
            <summary>
搜索指定的单精度浮点数,默认步长是1.如果要定制步长，请用FindFloatEx
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) 如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索) "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="float_value_min">搜索的单精度数值最小值</param><param name="float_value_max">搜索的单精度数值最大值 最终搜索的数值大与等于float_value_min,并且小于等于float_value_max</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindInt(System.IntPtr,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
搜索指定的整数,默认步长是1.如果要定制步长，请用FindIntEx
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr_range">指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描) |如果要进行地址范围搜索，那么这个值为的形如如下(类似于CE的新搜索)| "00400000-7FFFFFFF" "80000000-BFFFFFFF" "00000000-FFFFFFFF" 等</param><param name="int_value_min">搜索的整数数值最小值</param><param name="int_value_max">搜索的整数数值最大值 最终搜索的数值大与等于int_value_min,并且小于等于 int_value_max</param><param name="type">搜索的整数类型,取值如下 0 : 32位  1 : 16 位  2 : 8位</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadDouble(System.IntPtr,System.String)">
            <summary>
读取指定地址的双精度浮点数
</summary>&gt;
<param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param><param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用小于和大于符号来圈起来  |  "4DA678" 最简单的方式，用绝对数值来表示地址 | "&lt;360SE.exe&gt;+DA678" 相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移 | "[4DA678]+3A" 用绝对数值加偏移，相当于一级指针 | "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针 |  "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ReadFloat(System.IntPtr,System.String)">
            <summary>
读取指定地址的单精度浮点数
</summary>
            <param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param>
            <param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用&lt;&gt;符号来圈起来  |  "4DA678" 最简单的方式，用绝对数值来表示地址 |  "&lt;360SE.exe&gt;+DA678"  相对简单的方式，只是这里用模块名来决定模块基址，后面的是偏移 | "[4DA678]+3A" 用绝对数值加偏移，相当于一级指针 | "[&lt;360SE.exe&gt;+DA678]+3A" 用模块定基址的方式，也是一级指针 |  "[[[&lt;360SE.exe&gt;+DA678]+3A]+5B]+8" 这个是一个三级指针 总之熟悉CE的人 应该对这个地址描述都很熟悉,我就不多举例了</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.ReadInt(System.IntPtr,System.String,System.Int32)">
            <summary>
读取指定地址的整数数值，类型可以是8位，16位 或者 32位
</summary>
            <param name="hwnd">指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId</param>
            <param name="addr">用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用 &lt;&gt;符号来圈起来</param>
            <param name="type">0 : 32位 1 : 16 位 2 : 8位</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.SetClientSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
设置窗口客户区域的宽度和高度
</summary>
            <param name="hwnd">指定的窗口句柄</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.FindPicEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_name">图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"</param><param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0.从左到右,从上到下  1.从左到右,从下到上 2.从右到左,从上到下 3.从右到左, 从下到上</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindPic(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="pic_name">图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"</param><param name="delta_color">颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0.从左到右,从上到下 1.从左到右,从下到上 2.从右到左,从上到下 3.从右到左, 从下到上</param><param name="x">返回图片左上角的X坐标</param><param name="y">返回图片左上角的Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetDict(System.Int32,System.String)">
            <summary>
设置字库文件
</summary>&gt;
<param name="index">字库的序号,取值为0-19,目前最多支持20个字库</param><param name="dict_name">字库文件名</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetPath">
            <summary>
获取全局路径.(可用于调试)
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.SendString(System.IntPtr,System.String)">
            <summary>
向指定窗口发送文本数据
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="str">发送的文本数据</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetKeypadDelay(System.String,System.Int32)">
            <summary>
设置按键时,键盘按下和弹起的时间间隔。高级用户使用。某些窗口可能需要调整这个参数才可以正常按键
</summary>&gt;
<param name="type">键盘类型,取值有以下 |"normal" : 对应normal键盘  默认内部延时为30ms |"windows": 对应windows 键盘 默认内部延时为10ms  |"dx" :     对应dx 键盘 默认内部延时为50ms</param><param name="delay">延时,单位是毫秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetMouseDelay(System.String,System.Int32)">
            <summary>
设置鼠标单击或者双击时,鼠标按下和弹起的时间间隔。高级用户使用。某些窗口可能需要调整这个参数才可以正常点击
</summary>&gt;
<param name="type">鼠标类型,取值有以下 "normal" : 对应normal鼠标 默认内部延时为 30ms |"windows": 对应windows 鼠标 默认内部延时为 10ms |"windows": 对应windows 鼠标 默认内部延时为 10ms</param><param name="delay">延时,单位是毫秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.WheelDown">
            <summary>
滚轮向下滚
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.WheelUp">
            <summary>
滚轮向上滚
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetScreenData(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
获取指定区域的图像,用二进制数据的方式返回,（不适合按键使用）方便二次开发
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FreePic(System.String)">
            <summary>
释放指定的图片,此函数不必要调用,除非你想节省内存
</summary>&gt;
<param name="pic_name">文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如"*.bmp" 这个对应了所有的bmp文件 "a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件 "abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.LoadPic(System.String)">
            <summary>
预先加载指定的图片,这样在操作任何和图片相关的函数时,将省去了加载图片的时间。调用此函数后,没必要一定要调用FreePic,插件自己会自动释放
</summary>&gt;
<param name="pic_name">文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件 |"a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件|"abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqGetSize(System.Int32)">
            <summary>
获取句柄所对应的数据包的大小,单位是字节
</summary>&gt;
<param name="handle">由FaqCapture返回的句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarClose(System.IntPtr)">
            <summary>
关闭一个Foobar,注意,必须调用此函数来关闭窗口,用SetWindowState也可以关闭,但会造成内存泄漏
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.Beep(System.Int32,System.Int32)">
            <summary>
蜂鸣器
</summary>&gt;
<param name="fre">频率</param><param name="delay">时长(ms).</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqSend(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
发送指定的图像句柄到指定的服务器,并等待返回结果(同步等待).
</summary>&gt;
<param name="server">服务器地址以及端口,格式为(ip:port),例如 "192.168.1.100:12345" 多个地址可以用"|"符号连接。比如"192.168.1.100:12345|192.168.1.101:12345"</param><param name="handle">由FaqCapture获取到的句柄</param><param name="request_type">取值定义：0.要求获取坐标 1.要求获取选项,比如(ABCDE) 2.要求获取文字答案 3.要求获取两个坐标.此功能要求答题器必须是v15之后的版本</param><param name="time_out">表示等待多久,单位是毫秒</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FaqCapture(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
截取指定范围内的动画或者图像,并返回此句柄
</summary>&gt;
<param name="x1">左上角X坐标</param><param name="y1">左上角Y坐标</param><param name="x2">右下角X坐标</param><param name="y2">右下角Y坐标</param><param name="quality">图像或动画品质,或者叫压缩率,此值越大图像质量越好 取值范围（1-100或者250） 当此值为250时，那么会截取无损bmp图像数据</param><param name="delay">截取动画时用,表示相隔两帧间的时间间隔,单位毫秒 （如果只是截取静态图像,这个参数必须是0）</param><param name="time">表示总共截取多久的动画,单位毫秒 （如果只是截取静态图像,这个参数必须是0）</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.Play(System.String)">
            <summary>
播放指定的MP3或者wav文件
</summary>&gt;
<param name="file">指定的音乐文件，可以采用文件名或者绝对路径的形式</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarTextLineGap(System.IntPtr,System.Int32)">
            <summary>
设置滚动文本区的文字行间距,默认是3
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><param name="gap">文本行间距</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarClearText(System.IntPtr)">
            <summary>
清除指定的Foobar滚动文本区
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarPrintText(System.IntPtr,System.String,System.String)">
            <summary>
向指定的Foobar窗口区域内输出滚动文字
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><param name="text">文本内容</param><param name="color">文本颜色</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarTextRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
设置指定Foobar窗口的滚动文本框范围,默认的文本框范围是窗口区域
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><param name="x">x坐标</param><param name="y">y坐标</param><param name="w">宽度</param><param name="h">高度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarSetFont(System.IntPtr,System.String,System.Int32,System.Int32)">
            <summary>
设置指定Foobar窗口的字体
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><param name="font_name">系统字体名,注意,必须保证系统中有此字体</param><param name="size">字体大小</param><param name="flag">取值定义:0.正常字体 1.粗体 2.斜体 4.下划线  文字可以是以上的组合 比如粗斜体就是1+2,斜体带下划线就是:2+4等</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarUnlock(System.IntPtr)">
            <summary>
解锁指定的Foobar窗口,可以通过鼠标来移动
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarLock(System.IntPtr)">
            <summary>
锁定指定的Foobar窗口,不能通过鼠标来移动
</summary>&gt;
<param name="hwnd">指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarUpdate(System.IntPtr)">
            <summary>
刷新指定的Foobar窗口
</summary>&gt;
<param name="hwnd">指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarDrawPic(System.IntPtr,System.Int32,System.Int32,System.String,System.String)">
            <summary>
在指定的Foobar窗口绘制图像
</summary>&gt;
<param name="hwnd">指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="pic">图像文件名</param><param name="trans_color">图像透明色</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarDrawText(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
在指定的Foobar窗口绘制文字
</summary>&gt;
<param name="hwnd">指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="w">矩形区域的宽度</param><param name="h">矩形区域的高度</param><param name="text">字符串</param><param name="color">文字颜色值</param><param name="align">取值定义 1.左对齐 2.中间对齐 4.右对齐</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FoobarFillRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
在指定的Foobar窗口内部填充矩形
</summary>&gt;
<param name="hwnd">指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的</param><param name="x1">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y1">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="x2">右下角X坐标(相对于hwnd客户区坐标)</param><param name="y2">右下角Y坐标(相对于hwnd客户区坐标)</param><param name="color">填充的颜色值</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CreateFoobarCustom(System.IntPtr,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
根据指定的位图创建一个自定义形状的窗口
</summary>&gt;
<param name="hwnd">指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="pic">位图名字</param><param name="trans_color">透明色(RRGGBB)</param><param name="sim">透明色的相似值 0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CreateFoobarEllipse(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
创建一个椭圆窗口
</summary>&gt;
<param name="hwnd">指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="w">矩形区域的宽度</param><param name="h">矩形区域的高度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CreateFoobarRoundRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
创建一个圆角矩形窗口
</summary>&gt;
<param name="hwnd">指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="w">矩形区域的宽度</param><param name="h">矩形区域的高度</param><param name="rw">圆角的宽度</param><param name="rh">圆角的高度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CreateFoobarRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
创建一个矩形窗口
</summary>&gt;
<param name="hwnd">指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口</param><param name="x">左上角X坐标(相对于hwnd客户区坐标)</param><param name="y">左上角Y坐标(相对于hwnd客户区坐标)</param><param name="w">矩形区域的宽度</param><param name="h">矩形区域的高度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWindowState(System.IntPtr,System.Int32)">
            <summary>
设置窗口的状态
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="flag">取值定义:0.关闭指定窗口 1.激活指定窗口 2.最小化指定窗口,但不激活 3.最小化指定窗口,并释放内存,但同时也会激活窗口(释放内存可以考虑用FreeProcessMemory函数) 4.最大化指定窗口,同时激活窗口 5.恢复指定窗口 ,但不激活 6.隐藏指定窗口 7.显示指定窗口 8.置顶指定窗口 9.取消置顶指定窗口 10.禁止指定窗口 11.取消禁止指定窗口 12.恢复并激活指定窗口 13.强制结束窗口所在进程 14.闪烁指定的窗口 15.使指定的窗口获取输入焦点</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWindowClass(System.IntPtr)">
            <summary>
获取窗口的类名
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWindowTitle(System.IntPtr)">
            <summary>
获取窗口的标题
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWindowRect(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
获取窗口在屏幕上的位置
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="x1">返回窗口左上角X坐标</param><param name="y1">返回窗口左上角Y坐标</param><param name="x2">返回窗口右下角X坐标</param><param name="y2">返回窗口右下角Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWindowSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
设置窗口的大小
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="width">宽度</param><param name="height">高度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWindowTextW(System.IntPtr,System.String)">
            <summary>
设置窗口的标题
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="text">标题</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetSpecialWindow(System.Int32)">
            <summary>
获取特殊窗口
</summary>&gt;
<param name="flag">取值定义: 0.获取桌面窗口 1.获取任务栏窗口</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWindow(System.IntPtr,System.Int32)">
            <summary>
获取给定窗口相关的窗口句柄
</summary>&gt;
<param name="hwnd">窗口句柄</param><param name="flag">取值定义:0.获取父窗口 1.获取第一个儿子窗口 2.获取First 窗口 3.获取Last窗口 4.获取下一个窗口 5.获取上一个窗口 6.获取拥有者窗口 7.获取顶层窗口</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWindowState(System.IntPtr,System.Int32)">
            <summary>
获取指定窗口的一些属性
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="flag">取值定义: 0.判断窗口是否存在  1.判断窗口是否处于激活  2.判断窗口是否可见  3.判断窗口是否最小化 4.判断窗口是否最大化  5.判断窗口是否置顶  6.判断窗口是否无响应  7.判断窗口是否可用(灰色为不可用)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.EnumWindow(System.Int32,System.String,System.String,System.Int32)">
            <summary>
根据指定条件,枚举系统中符合条件的窗口,可以枚举到按键自带的无法枚举到的窗口
</summary>&gt;
<param name="parent">获得的窗口句柄是该窗口的子窗口的窗口句柄,取0时为获得桌面句柄</param><param name="title">窗口标题. 此参数是模糊匹配</param><param name="class_name">窗口类名. 此参数是模糊匹配</param><param name="filter">取值定义： 1.匹配窗口标题,参数title有效   2.匹配窗口类名,参数class_name有效   4.只匹配指定父窗口的第一层孩子窗口   8.匹配所有者窗口为0的窗口,即顶级窗口   16.匹配可见的窗口   32.匹配出的窗口按照窗口打开顺序依次排列    这些值可以相加,比如4+8+16就是类似于任务管理器中的窗口列表</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetPointWindow(System.Int32,System.Int32)">
            <summary>
获取给定坐标的可见窗口句柄,可以获取到按键自带的插件无法获取到的句柄
</summary>&gt;
<param name="x">X坐标</param><param name="y">Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetMousePointWindow">
            <summary>
获取鼠标指向的可见窗口句柄,可以获取到按键自带的插件无法获取到的句柄
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetForegroundFocus">
            <summary>
获取顶层活动窗口中具有输入焦点的窗口句柄
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetForegroundWindow">
            <summary>
获取顶层活动窗口,可以获取到按键自带插件无法获取到的句柄
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetAveHSV(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
获取范围(x1,y1,x2,y2)颜色的均值,返回格式"H.S.V"
</summary>&gt;
<param name="x1">左上角X</param><param name="y1">左上角Y</param><param name="x2">右下角X</param><param name="y2">右下角Y</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetAveRGB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
获取范围(x1,y1,x2,y2)颜色的均值,返回格式"RRGGBB"
</summary>&gt;
<param name="x1">左上角X</param><param name="y1">左上角Y</param><param name="x2">右下角X</param><param name="y2">右下角Y</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetColorHSV(System.Int32,System.Int32)">
            <summary>
获取(x,y)的HSV颜色,颜色返回格式"H.S.V"
</summary>&gt;
<param name="x">X坐标</param><param name="y">Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.MoveWindow(System.IntPtr,System.Int32,System.Int32)">
            <summary>
移动指定窗口到指定位置
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="x">X坐标</param><param name="y">Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetClientSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
获取窗口客户区域的宽度和高度
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="width">宽度</param><param name="height">高度</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetShowErrorMsg(System.Int32)">
            <summary>
设置是否弹出错误信息,默认是打开
</summary>&gt;
<param name="show">0表示不打开,1表示打开</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWordsNoDict(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
根据指定的范围,以及设定好的词组识别参数(一般不用更改,除非你真的理解了) 识别这个范围内所有满足条件的词组. 这个识别函数不会用到字库。只是识别大概形状的位置
</summary>&gt;
<param name="x1">左上角X坐标</param><param name="y1">左上角Y坐标</param><param name="x2">右下角X坐标</param><param name="y2">右下角Y坐标</param><param name="color">颜色格式串.注意，RGB和HSV格式都支持</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWords(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double)">
            <summary>
根据指定的范围,以及设定好的词组识别参数(一般不用更改,除非你真的理解了) 识别这个范围内所有满足条件的词组. 比较适合用在未知文字的情况下,进行不定识别
</summary>&gt;
<param name="x1">左上角X坐标</param><param name="y1">左上角Y坐标</param><param name="x2">右下角X坐标</param><param name="y2">右下角Y坐标</param><param name="color">颜色格式串.注意，RGB和HSV格式都支持</param><param name="sim">相似度 0.1-1.0</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWordResultStr(System.String,System.Int32)">
            <summary>
在使用GetWords进行词组识别以后,可以用此接口进行识别各个词组的内容
</summary>&gt;
<param name="str">GetWords的返回值</param><param name="index">表示第几个词组</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWordResultPos(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
在使用GetWords进行词组识别以后,可以用此接口进行识别各个词组的坐标
</summary>&gt;
<param name="str">GetWords的返回值</param><param name="index">表示第几个词组</param><param name="x">返回的X坐标</param><param name="y">返回的Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetWordResultCount(System.String)">
            <summary>
在使用GetWords进行词组识别以后,可以用此接口进行识别词组数量的计算
</summary>&gt;
<param name="str">GetWords接口调用以后的返回值</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWordGapNoDict(System.Int32)">
            <summary>
高级用户使用,在不使用字库进行词组识别前,可设定词组间的间隔,默认的词组间隔是5
</summary>&gt;
<param name="word_gap">单词间距</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWordLineHeightNoDict(System.Int32)">
            <summary>
高级用户使用,在不使用字库进行词组识别前,可设定文字的平均行高,默认的词组行高是10
</summary>&gt;
<param name="line_height">行高</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetColGapNoDict(System.Int32)">
            <summary>
高级用户使用,在不使用字库进行词组识别前,可设定文字的列距,默认列距是1
</summary>&gt;
<param name="col_gap">文字列距</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetRowGapNoDict(System.Int32)">
            <summary>
高级用户使用,在不使用字库进行词组识别前,可设定文字的行距,默认行距是1
</summary>&gt;
<param name="row_gap">文字行距</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWordGap(System.Int32)">
            <summary>
高级用户使用,在识别词组前,可设定词组间的间隔,默认的词组间隔是5
</summary>&gt;
<param name="word_gap">单词间距</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetWordLineHeight(System.Int32)">
            <summary>
高级用户使用,在识别词组前,可设定文字的平均行高,默认的词组行高是10
</summary>&gt;
<param name="line_height">行高</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindColorEx(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32)">
            <summary>
查找指定区域内的所有颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色 格式为"RRGGBB-DRDGDB" 比如"aabbcc-000000|123456-202020".注意，这里只支持RGB颜色</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 查找方向 0: 从左到右,从上到下  1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上 4：从中心往外查找 5: 从上到下,从左到右 6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.FindColor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
查找指定区域内的颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
</summary>&gt;
<param name="x1">区域的左上X坐标</param><param name="y1">区域的左上Y坐标</param><param name="x2">区域的右下X坐标</param><param name="y2">区域的右下Y坐标</param><param name="color">颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020".注意，这里只支持RGB颜色</param><param name="sim">相似度,取值范围0.1-1.0</param><param name="dir">查找方向 0: 从左到右,从上到下  1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上 4：从中心往外查找 5: 从上到下,从左到右 6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左</param><param name="x">返回X坐标</param><param name="y">返回Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetMinColGap(System.Int32)">
            <summary>
高级用户使用,在识别前,如果待识别区域有多行文字,可以设定列间距,默认的列间距是0 如果根据情况设定,可以提高识别精度。一般不用设定
</summary>&gt;
<param name="col_gap">最小列间距</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.SetMinRowGap(System.Int32)">
            <summary>
高级用户使用,在识别前,如果待识别区域有多行文字,可以设定行间距,默认的行间距是1 如果根据情况设定,可以提高识别精度。一般不用设定
</summary>&gt;
<param name="row_gap">最小行间距</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ScreenToClient(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
把屏幕坐标转换为窗口坐标
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="x">屏幕X坐标</param><param name="y">屏幕Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.ClientToScreen(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
把窗口坐标转换为屏幕坐标
</summary>&gt;
<param name="hwnd">指定的窗口句柄</param><param name="x">窗口X坐标</param><param name="y">窗口Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.CmpColor(System.Int32,System.Int32,System.String,System.Double)">
            <summary>
比较指定坐标点(x,y)的颜色
</summary>&gt;
<param name="x">X坐标</param><param name="y">Y坐标</param><param name="color">颜色字符串,可以支持偏色,多色,例如 "ffffff-202020|000000-000000" 这个表示白色偏色为202020,和黑色偏色为000000.颜色最多支持10种颜色组合. 注意，这里只支持RGB颜色</param><param name="sim">相似度(0.1-1.0)</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.UnBindWindow">
            <summary>
解除绑定窗口,并释放系统资源.一般在OnScriptExit调用
</summary>&gt;
<returns>-</returns></member>
        <member name="M:XGLib.XGDm.BGR2RGB(System.String)">
            <summary>
把BGR(按键格式)的颜色格式转换为RGB
</summary>&gt;
<param name="bgr_color">bgr格式的颜色字符串</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.RGB2BGR(System.String)">
            <summary>
把RGB的颜色格式转换为BGR(按键格式)
</summary>&gt;
<param name="rgb_color">rgb格式的颜色字符串</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetColorBGR(System.Int32,System.Int32)">
            <summary>
获取(x,y)的颜色,颜色返回格式"BBGGRR"
</summary>&gt;
<param name="x">X坐标</param><param name="y">Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.GetColor(System.Int32,System.Int32)">
            <summary>
获取(x,y)的颜色,颜色返回格式"RRGGBB",注意,和按键的颜色格式相反
</summary>&gt;
<param name="x">X坐标</param><param name="y">Y坐标</param><returns>-</returns></member>
        <member name="M:XGLib.XGDm.MoveR(System.Int32,System.Int32)">
            <summary>
鼠标相对于上次的位置移动rx,ry
</summary>
            <param name="rx">相对于上次的X偏移</param>
            <param name="ry">相对于上次的Y偏移</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.MoveTo(System.Int32,System.Int32)">
            <summary>
把鼠标移动到目的点(x,y)
</summary>
            <param name="x">X坐标</param>
            <param name="y">Y坐标</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.RightUp">
            <summary>
弹起鼠标右键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.RightDown">
            <summary>
按住鼠标右键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.LeftUp">
            <summary>
弹起鼠标左键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.LeftDown">
            <summary>
按住鼠标左键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.LeftDoubleClick">
            <summary>
双击鼠标左键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.MiddleClick">
            <summary>
按下鼠标中键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.RightClick">
            <summary>
按下鼠标右键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.LeftClick">
            <summary>
按下鼠标左键
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.KeyUp(System.Int32)">
            <summary>
弹起来虚拟键
</summary>
            <param name="vk">虚拟按键码</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.KeyDown(System.Int32)">
            <summary>
按住指定的虚拟键码
</summary>
            <param name="vk">虚拟按键码</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.KeyPress(System.Int32)">
            <summary>
按下指定的虚拟键码
</summary>
            <param name="vk">虚拟按键码</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.Capture(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
抓取指定区域(x1, y1, x2, y2)的图像,保存为file(24位位图)
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="file">保存的文件名,保存的地方一般为SetPath中设置的目录 ，当然这里也可以指定全路径名</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.OcrInFile(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double)">
            <summary>
识别位图中区域(x1,y1,x2,y2)的文字
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="pic_name">图片文件名</param>
            <param name="color">颜色格式串.注意，RGB和HSV格式都支持</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.SetDictPwd(System.String)">
            <summary>
设置字库的密码,在SetDict前调用,目前的设计是,所有字库通用一个密码
</summary>
            <param name="pwd">字库密码</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.GetBasePath">
            <summary>
获取注册在系统中的dm.dll的路径
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.UseDict(System.Int32)">
            <summary>
表示使用哪个字库文件进行识别(index范围:0-9)
</summary>
            <param name="index">字库编号(0-9)</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.GetResultPos(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
对插件部分接口的返回值进行解析,并根据指定的第index个坐标,返回具体的值
</summary>
            <param name="str">部分接口的返回串</param>
            <param name="index">第几个坐标</param>
            <param name="x">返回X坐标</param>
            <param name="y">返回Y坐标</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.GetResultCount(System.String)">
            <summary>
对插件部分接口的返回值进行解析,并返回ret中的坐标个数
</summary>
            <param name="str">部分接口的返回串,参考大漠chm文档中的说明</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.FindStr(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32@,System.Int32@)">
            <summary>
在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color的坐标位置,相似度sim同Ocr接口描述
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="str">待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串</param>
            <param name="color">颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例 .注意，RGB和HSV格式都支持</param>
            <param name="sim">相似度,取值范围0.1-1.0</param>
            <param name="x">返回X坐标没找到返回-1</param>
            <param name="y">返回Y坐标没找到返回-1</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.Ocr(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double)">
            <summary>
识别屏幕范围(x1,y1,x2,y2)内符合color的字符串,并且相似度为sim,sim取值范围(0.1-1.0)
</summary>
            <param name="x1">区域的左上X坐标</param>
            <param name="y1">区域的左上Y坐标</param>
            <param name="x2">区域的右下X坐标</param>
            <param name="y2">区域的右下Y坐标</param>
            <param name="color">颜色格式串. 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持</param>
            <param name="sim">相似度,取值范围0.1-1.0  这个值越大越精确,越大速度越快,越小速度越慢,请斟酌使用</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.SetPath(System.String)">
            <summary>
设置全局路径,设置了此路径后,所有接口调用中,相关的文件都相对于此路径. 比如图片,字库等
</summary>
            <param name="path">路径,可以是相对路径,也可以是绝对路径</param>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.Ver">
            <summary>
返回当前插件版本号
</summary>
            <returns>-</returns>
        </member>
        <member name="M:XGLib.XGDm.Release">
            <summary>
清除对象
</summary>
        </member>
        <member name="M:XGLib.XGDm.Create">
            <summary>
创建组件,此方法使用全局DllPath属性可以免注册表创建插件对象
</summary>
            <returns>返回创建状态 成功返回true,失败返回false</returns>
        </member>
        <member name="M:XGLib.XGDm.Create(System.String)">
            <summary>
创建组件,此方法可以免注册表创建插件对象
</summary>
            <param name="dmDllPath">插件路径</param>
            <returns>返回创建状态 成功返回true,失败返回false</returns>
        </member>
        <member name="M:XGLib.XGDm.Dispose">
            <summary>
释放所有资源
</summary>
        </member>
        <member name="M:XGLib.XGDm.#ctor">
            <summary>
初始化实例
</summary>
        </member>
        <member name="P:XGLib.XGDm.DllPath">
            <summary>
全局插件dll路径
</summary>
        </member>
        <member name="T:XGLib.XGDm">
            <summary>
大漠插件类(请设置为x86平台)
<para>1.本类所有封装基于最新版本,包括xml文档说明.若发现注释有误可联系我更正</para><para>2.支持多版本大漠组件,因此某些功能在低版本是不存在.请参考所用的版本文档编写</para><para>3.如在使用过程中遇到问题,可以在群里@大老爷</para></summary>
        </member>
    </members>
</doc>